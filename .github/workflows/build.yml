name: Build

on: [push, pull_request]

env:
  VCPKGRESPONSEFILE: '${{ github.workspace }}/vcpkg-response-file.txt'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest]
        build-type: [Debug, Release]
        include:
          - os: windows-latest
            triplet: x86-windows-static
            cmake-args: '-AWin32 -Thost=x86'
          - os: ubuntu-latest
            triplet: x64-linux
            cmake-args: '-DCMAKE_CXX_FLAGS=-m32 -DCMAKE_C_FLAGS=-m32'

    runs-on: windows-latest

    env:
      BUILD_TYPE: ${{ matrix.build-type }}
      CMAKE_BUILD_PARALLEL_LEVEL: 2

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
  
    - uses: lukka/get-cmake@latest

    - name: setup dependencies (vcpkg, cached)
      uses: lukka/run-vcpkg@v3
      with:
        vcpkgArguments: '@${{ env.VCPKGRESPONSEFILE }} --triplet ${{ matrix.triplet }}'
        vcpkgDirectory: '${{ github.workspace }}/tools/vcpkg'
        appendedCacheKey: ${{ hashFiles(env.VCPKGRESPONSEFILE) }}

    - name: 'build with CMake'
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        buildDirectory: '${{ runner.workspace }}/build'
        cmakeAppendedArgs: '${{ matrix.cmake-args }}'
